import java.awt.*;
import javax.swing.*;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;

import java.util.Scanner;

public class MazeFrame extends JFrame {

    private TheGame game;
    private Location[][] locations;
    private String mazeType;
    private JTextArea message;

    public MazeFrame() {
	super("Maze");
    }
    
    public void init() {
	this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	newGame("maze1");
    }

    public void newGame(String t) {
	Container ct = getContentPane();
	game = new TheGame(this);
	mazeType = t;

	//Read text file, create locations and transitions
	Location startLoc = null;
	Scanner sc = null;
	try {
	    sc = new Scanner(new FileReader(mazeType + ".dat"));
	    int size = sc.nextInt();
	    locations = new Location[size][size];

	    for (int i=0; i<size; i++) {
		sc.nextLine();
		for (int j=0; j<size; j++) {
		    char type = sc.next().charAt(0);
		    if (type == 's') {
			locations[i][j] =
			    new StartLocation(sc, i, j, game, mazeType);
			startLoc = locations[i][j];
		    }
		    else if (type == 'i')
			locations[i][j] = 
			    new IntermedLocation(sc, i, j, game, mazeType);
		    else if (type == 'g') 
			locations[i][j] = 
			    new GoalLocation(i, j, game, mazeType);
		    else {
			System.out.println("Location type not recognized.");
			System.exit(0);
		    }
		}
	    }
	}

	catch(FileNotFoundException e) {
	    e.printStackTrace();
	}

	//Create the maze
	MazePanel maze = new MazePanel(locations);

	//Message box, maze selection combo box, and start new game button
	JPanel bottomPanel = new JPanel(new BorderLayout());
	createBottomPanel(bottomPanel);

	//Add to containers
	ct.add(maze, BorderLayout.CENTER);
	ct.add(bottomPanel, BorderLayout.PAGE_END);

	//Add first active state
	game.start(startLoc);

    }

    public Location[][] getLocations() {
	return locations;
    }

    public void setMessage(String msg) {
	message.setText(msg);
    }

    public void createBottomPanel(JPanel p) {
	//Message box
	message = new JTextArea();
	message.setEditable(false);
	message.setLineWrap(true);
	message.setWrapStyleWord(true);
	createFirstMessage();

	p.add(message, BorderLayout.CENTER);

	//Buttons
	JButton solver = new JButton("Solve");
	SolverHandler solverHand = new SolverHandler(game, solver);
	solver.addActionListener(solverHand);

	String[] mazes = { "maze1", "maze2", "maze3", "maze4" };
	JComboBox selectMaze = new JComboBox(mazes);
	selectMaze.setSelectedItem(mazeType);

	JButton newGame = new JButton("Start New Game");
	NewGameHandler newHand = new NewGameHandler(selectMaze, this);
	newGame.addActionListener(newHand);

	JPanel buttonsPanel = new JPanel();
	buttonsPanel.add(solver);
	buttonsPanel.add(selectMaze);
	buttonsPanel.add(newGame);
	p.add(buttonsPanel, BorderLayout.PAGE_END);
	
    }

    public void createFirstMessage() {
	if (mazeType.equals("maze1"))
	    setMessage("Start on the red square and finish on the green square. Each square has a number that indicates how far you must move, horizontally or vertically, when you leave the square.");
	else if (mazeType.equals("maze2"))
	    setMessage("Start on the red square and finish the green square. Each square has a number that indicates how far you must move, horizontally or vertically, when you leave the square, but do not make a U-turn. On any move after the first, you must continue in the same direction as the last move or go left or right. You cannot go back in the direction you just came from.");
	else if (mazeType.equals("maze3"))
	    setMessage("Start on the red square and finish on the green square. Begin each move by following one of the arrows in the square you are on, and travel a straight line for a distance equal to d. At the start, d equals 1. When you land on a red arrow, 1 is added to d. When you land on a yellow arrow, 1 is subtracted from d.");
	else if (mazeType.equals("maze4"))
	    setMessage("Start on the red square and finish on the green square. Follow the arrow in the square you are on, alternating between red and blue arrows. You may escape the maze when you arrive at an arrow that points to the green square.");
    }

}
